@model EvironmentQA.Models.Archivo

@{
    ViewBag.Title = "NuevoArchivo";
    
}

<h2>NuevoArchivo</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Archivo</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    @if (!string.IsNullOrEmpty(ViewBag.Alert))
    {
        if (ViewBag.Alert != "Success")
        {
            <div class="alert alert-warning alert-dismissible" role="alert">
                <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <strong>Warning!</strong> El Archivo <strong>@ViewBag.Alert</strong> se esta trabajando en otro ISR.

            </div>
        }
        else
        {
            <div class="alert alert-success alert-dismissible" role="alert">
                <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <strong>Exito!</strong> El Archivo se grabo correctamente

            </div>
        }

    }


    <div class="form-group">
        @Html.LabelFor(model => model.NomArchivo, htmlAttributes: new { @class = "control-label col-md-2" })
        @*<input type="file" id="NomArchivo" multiple class="form-control"/>*@
        <div class="col-md-10">
            @*@Html.EditorFor(model => model.NomArchivo, new { htmlAttributes = new { @class = "form-control", Type = "file" } })*@
            @Html.TextBoxFor(model => model.NomArchivo, new { type = "file",  multiple ="" } )
            @Html.ValidationMessageFor(model => model.NomArchivo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.idCarpetaRuta, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("idCarpetaRuta", (List<SelectListItem>)ViewBag.opciones, null, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.idCarpetaRuta, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ISR, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ISR, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ISR, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.NomISR, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.NomISR, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.NomISR, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Ambiente, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Ambiente, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Ambiente, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Responsable_id, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Responsable_id", (List<SelectListItem>)ViewBag.responsables, null, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Responsable_id, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.FechaModificacion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FechaModificacion, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                @Html.ValidationMessageFor(model => model.FechaModificacion, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.RutaFileServer, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.RutaFileServer, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.RutaFileServer, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Archivos")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
